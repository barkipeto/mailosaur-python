# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class Message(Model):
    """Message.

    :param id: Unique identifier for the message.
    :type id: str
    :param sender: The sender of the message.
    :type sender: list[~mailosaur.models.MessageAddress]
    :param to: The message’s recipient.
    :type to: list[~mailosaur.models.MessageAddress]
    :param cc: Carbon-copied recipients for email messages.
    :type cc: list[~mailosaur.models.MessageAddress]
    :param bcc: Blind carbon-copied recipients for email messages.
    :type bcc: list[~mailosaur.models.MessageAddress]
    :param received: The datetime that this message was received by Mailosaur.
    :type received: datetime
    :param subject: The message’s subject.
    :type subject: str
    :param html: Message content that was sent in HTML format.
    :type html: ~mailosaur.models.MessageContent
    :param text: Message content that was sent in plain text format.
    :type text: ~mailosaur.models.MessageContent
    :param attachments: An array of attachment metadata for any attached
     files.
    :type attachments: list[~mailosaur.models.Attachment]
    :param metadata:
    :type metadata: ~mailosaur.models.Metadata
    :param server: Identifier for the server in which the message is located.
    :type server: str
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'sender': {'key': 'from', 'type': '[MessageAddress]'},
        'to': {'key': 'to', 'type': '[MessageAddress]'},
        'cc': {'key': 'cc', 'type': '[MessageAddress]'},
        'bcc': {'key': 'bcc', 'type': '[MessageAddress]'},
        'received': {'key': 'received', 'type': 'iso-8601'},
        'subject': {'key': 'subject', 'type': 'str'},
        'html': {'key': 'html', 'type': 'MessageContent'},
        'text': {'key': 'text', 'type': 'MessageContent'},
        'attachments': {'key': 'attachments', 'type': '[Attachment]'},
        'metadata': {'key': 'metadata', 'type': 'Metadata'},
        'server': {'key': 'server', 'type': 'str'},
    }

    def __init__(self, id=None, sender=None, to=None, cc=None, bcc=None, received=None, subject=None, html=None, text=None, attachments=None, metadata=None, server=None):
        super(Message, self).__init__()
        self.id = id
        self.sender = sender
        self.to = to
        self.cc = cc
        self.bcc = bcc
        self.received = received
        self.subject = subject
        self.html = html
        self.text = text
        self.attachments = attachments
        self.metadata = metadata
        self.server = server
